{"version":3,"sources":["api/users.ts","helpers/getUser.ts","api/todos.ts","helpers/getTodos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","getUser","userId","usersFromServer","find","user","todos","title","completed","map","todo","UserInfo","link","className","href","TodoInfo","classNames","TodoList","App","state","currentTodo","Math","max","re","inputStatusMonitoring","handleChange","event","target","value","match","setState","prevState","handleSubmit","e","preventDefault","trim","newTodo","iterateEventId","handleResetForm","forceUpdate","action","method","onSubmit","this","type","placeholder","onChange","disabled","users","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.877db253.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === +userId);\n\n  return foundUser || null;\n}\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import todosFromServer from '../api/todos';\n\nimport { getUser } from './getUser';\n\nimport { Todo } from '../types/Todo';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({\n  user: {\n    name,\n    email,\n    id,\n  },\n}) => {\n  const link = `mailto:${email}`;\n\n  return (\n    <a className=\"UserInfo\" data-id={id} href={link}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({\n  todo: {\n    id,\n    title,\n    user,\n    completed,\n  },\n}) => (\n  <article\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': completed,\n    })}\n    data-id={id}\n  >\n    <h2 className=\"TodoInfo__title\">{title}</h2>\n    {user && <UserInfo user={user} />}\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos?: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React from 'react';\nimport './App.scss';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport users from './api/users';\n\nimport { getUser } from './helpers/getUser';\nimport { todos } from './helpers/getTodos';\n\nimport { TodoList } from './components/TodoList';\n\ntype State = {\n  currentTodo: Todo,\n  todos: Todo[],\n  re: RegExp,\n  inputStatusMonitoring: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    currentTodo: {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title: '',\n      userId: 0,\n      completed: false,\n    },\n    todos: [...todos],\n    re: /^[A-Za-zА-Яа-я0-9 ]*$/i,\n    inputStatusMonitoring: false,\n  };\n\n  handleChange = (event:\n  React.FormEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLSelectElement>) => { // 2 types for events of input change ang select tag change\n    const { name, value } = event.target as HTMLInputElement;\n\n    if (value.match(this.state.re)) {\n      this.setState((prevState => ({ // used prevState to avoid type script error (2345)\n        ...prevState,\n        currentTodo: {\n          ...prevState.currentTodo,\n          [name]: value,\n        },\n      })));\n    }\n  };\n\n  handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (this.state.currentTodo.userId && this.state.currentTodo.title.trim()) {\n      const newTodo = {\n        ...this.state.currentTodo,\n        user: getUser(this.state.currentTodo.userId),\n      };\n\n      this.setState(prevState => ({\n        ...prevState,\n        todos: [\n          ...prevState.todos,\n          newTodo,\n        ],\n      }));\n\n      this.iterateEventId();\n\n      this.handleResetForm();\n    } else {\n      this.state.inputStatusMonitoring = true;\n\n      this.forceUpdate();\n    }\n  };\n\n  iterateEventId = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      currentTodo: {\n        ...prevState.currentTodo,\n        id: prevState.currentTodo.id + 1,\n      },\n    }));\n  };\n\n  handleResetForm = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      currentTodo: {\n        ...prevState.currentTodo,\n        title: '',\n        userId: 0,\n      },\n    }));\n\n    this.state.inputStatusMonitoring = false;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"field\">\n            <label>\n              Title:&nbsp;\n              <input\n                name=\"title\"\n                type=\"text\"\n                data-cy=\"titleInput\"\n                placeholder=\"Enter a title\"\n                value={this.state.currentTodo.title}\n                onChange={this.handleChange}\n              />\n            </label>\n            {!this.state.currentTodo.title.trim()\n              && this.state.inputStatusMonitoring\n              && (\n                <span className=\"error\">Please enter a title</span>\n              )}\n          </div>\n\n          <div className=\"field\">\n            <label>\n              User:&nbsp;\n              <select\n                data-cy=\"userSelect\"\n                name=\"userId\"\n                value={this.state.currentTodo.userId}\n                onChange={this.handleChange}\n              >\n                <option value=\"0\" disabled>Choose a user</option>\n                {users.map(({ id, name }: User) => (\n                  <option\n                    key={id}\n                    value={id}\n                  >\n                    {name}\n                  </option>\n                ))}\n              </select>\n            </label>\n            {!this.state.currentTodo.userId\n              && this.state.inputStatusMonitoring\n              && (\n                <span className=\"error\">Please choose a user</span>\n              )}\n          </div>\n\n          <button type=\"submit\" data-cy=\"submitButton\">\n            Add\n          </button>\n        </form>\n\n        <TodoList todos={this.state.todos} />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}