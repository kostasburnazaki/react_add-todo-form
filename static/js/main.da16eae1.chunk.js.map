{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","helpers/getUser.ts","helpers/getTodos.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","id","link","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","state","Math","max","inputStatusMonitoring","handleChange","event","target","value","match","setState","prevState","handleSubmit","length","push","iterateEventId","clearTheForm","forceUpdate","action","method","onSubmit","e","preventDefault","type","placeholder","this","onChange","users","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da16eae1.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({\n  user: {\n    name,\n    email,\n    id,\n  },\n}) => {\n  const link = `mailto:${email}`;\n\n  return (\n    <a className=\"UserInfo\" data-id={id} href={link}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({\n  todo: {\n    id,\n    title,\n    user,\n    completed,\n  },\n}) => (\n  <article\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': completed,\n    })}\n    data-id={id}\n  >\n    <h2 className=\"TodoInfo__title\">{title}</h2>\n    {user && <UserInfo user={user} />}\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos?: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === +userId);\n\n  return foundUser || null;\n}\n","import todosFromServer from '../api/todos';\n\nimport { getUser } from './getUser';\n\nimport { Todo } from '../types/Todo';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { todos } from './helpers/getTodos';\nimport users from './api/users';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { getUser } from './helpers/getUser';\n\ntype State = Todo;\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    id: Math.max(...todos.map(todo => todo.id)) + 1,\n    title: '',\n    userId: 0,\n    completed: false,\n  };\n\n  inputStatusMonitoring = false; // this property used in order to comply with this requirement: \"errors should appear only after clicking the `Add` button\"\n\n  handleChange = (event:\n  React.FormEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLSelectElement>) => { // 2 types for events of input change ang select tag change\n    const { name, value } = event.target as HTMLInputElement;\n\n    if (value.match(/^[A-Za-zА-Яа-я0-9 ]*$/i)) {\n      this.setState((prevState => ({ // used prevState to avoid type script error (2345)\n        ...prevState,\n        [name]: value,\n      })));\n    }\n  };\n\n  handleSubmit = () => {\n    if (this.state.userId && this.state.title.length) {\n      todos.push({\n        ...this.state,\n        user: getUser(this.state.userId),\n      });\n      this.iterateEventId();\n      this.clearTheForm();\n    } else {\n      this.inputStatusMonitoring = true;\n      this.forceUpdate();\n    }\n  };\n\n  iterateEventId = () => {\n    this.setState(state => ({\n      id: state.id + 1,\n    }));\n  };\n\n  clearTheForm = () => {\n    this.setState({\n      title: '',\n      userId: 0,\n    });\n    this.inputStatusMonitoring = false;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            this.handleSubmit();\n          }}\n        >\n          <div className=\"field\">\n            <label>\n              Title:&nbsp;\n              <input\n                name=\"title\"\n                type=\"text\"\n                data-cy=\"titleInput\"\n                placeholder=\"Enter a title\"\n                value={this.state.title}\n                onChange={this.handleChange}\n              />\n            </label>\n            {!this.state.title && this.inputStatusMonitoring && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label>\n              User:&nbsp;\n              <select\n                data-cy=\"userSelect\"\n                name=\"userId\"\n                value={this.state.userId}\n                onChange={this.handleChange}\n              >\n                <option value=\"\">Choose a user</option>\n                {users.map((user: User) => (\n                  <option value={user.id}>{user.name}</option>\n                ))}\n              </select>\n            </label>\n            {!this.state.userId && this.inputStatusMonitoring && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </div>\n\n          <button type=\"submit\" data-cy=\"submitButton\">\n            Add\n          </button>\n        </form>\n\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}